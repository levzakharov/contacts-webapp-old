import React from 'react';import {Table} from 'react-bootstrap';import {connect} from 'react-redux';import {getRecords, deleteRecord} from '../actions/records';const propTypes = {    authentication: React.PropTypes.shape({        isAuthenticated: React.PropTypes.bool.isRequired,        token: React.PropTypes.string    })};class Contacts extends React.Component {    constructor(props) {        super(props);        this.removeRecord = this.removeRecord.bind(this);    }    componentDidMount() {        this.props.getRecords(this.props.authentication.token);    }    removeRecord(id) {        this.props.deleteRecord(this.props.authentication.token, id);    }    render() {        const {data} = this.props.records;        return (            <div>                <h1>Contacts</h1>                <Table striped bordered condensed hover>                    <thead>                    <tr>                        <th>Name</th>                        <th>Phone</th>                        <th></th>                    </tr>                    </thead>                    {data && (                        <tbody>                        {data.map(person => (                            <tr key={person.id}>                                <td>{person.name}</td>                                <td>{person.phone}</td>                                <td><button onClick={() => this.removeRecord(person.id)}>X</button></td>                            </tr>                        ))}                        </tbody>                    )}                </Table>            </div>        )    }}function mapStateToProps(state) {    const {authentication, records} = state;    return {        authentication,        records    };}Contacts.propTypes = propTypes;export default connect(mapStateToProps, {getRecords, deleteRecord})(Contacts);